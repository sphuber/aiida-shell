[build-system]
requires = ['flit_core>=3.4,<4']
build-backend = 'flit_core.buildapi'

[project]
name = 'aiida-shell'
dynamic = ['description', 'version']
authors = [
    {name = 'Sebastiaan P. Huber', email = 'mail@sphuber.net'}
]
readme = 'README.md'
license = {file = 'LICENSE.txt'}
classifiers = [
    'Development Status :: 3 - Alpha',
    'Framework :: AiiDA',
    'License :: OSI Approved :: MIT License',
    'Operating System :: POSIX :: Linux',
    'Operating System :: MacOS :: MacOS X',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Topic :: Scientific/Engineering'
]
keywords = ['aiida', 'workflows']
requires-python = '>=3.8'
dependencies = [
    'aiida-core~=2.1',
    'dill'
]

[project.urls]
homepage = 'https://github.com/sphuber/aiida-shell'
documentation = 'https://aiida-shell.readthedocs.io/'
tracker = 'https://github.com/sphuber/aiida-shell/issues'
source = 'https://github.com/sphuber/aiida-shell'

[project.optional-dependencies]
dev = [
    'mypy==0.981',
    'pre-commit',
    'pgtest~=1.3,>=1.3.1',
    'pytest~=6.2',
    'pytest-regressions',
]
docs = [
    'myst-parser',
    'pydata-sphinx-theme~=0.14.3',
    'sphinx~=7.2',
    'sphinx-copybutton~=0.5.0',
    'sphinx-click~=4.0',
]

[project.entry-points.'aiida.calculations']
'core.shell' = 'aiida_shell.calculations.shell:ShellJob'

[project.entry-points.'aiida.data']
'core.code.installed.shell' = 'aiida_shell.data.code:ShellCode'
'core.entry_point' = 'aiida_shell.data.entry_point:EntryPointData'
'core.pickled' = 'aiida_shell.data.pickled:PickledData'

[project.entry-points.'aiida.parsers']
'core.shell' = 'aiida_shell.parsers.shell:ShellParser'

[tool.flit.module]
name = 'aiida_shell'

[tool.flit.sdist]
exclude = [
    '.github/',
    'tests/',
    '.gitignore',
    '.pre-commit-config.yaml',
]

[tool.flynt]
line-length = 120
fail-on-change = true

[tool.ruff]
line-length = 120
select = [
  'E',    # pydocstyle
  'W',    # pydocstyle
  'F',    # pyflakes
  'I',    # isort
  'N',    # pep8-naming
  'D',    # pydocstyle
  'PLC',  # pylint-convention
  'PLE',  # pylint-error
  'PLR',  # pylint-refactor
  'PLW',  # pylint-warning
  'RUF',  # ruff
]
ignore = [
    'D203',  # Incompatible with D211 `no-blank-line-before-class`
    'D213',  # Incompatible with D212 `multi-line-summary-second-line`
]

[tool.ruff.format]
quote-style = 'single'

[tool.mypy]
show_error_codes = true
check_untyped_defs = true
scripts_are_modules = true
warn_unused_ignores = true
warn_redundant_casts = true
no_warn_no_return = true
show_traceback = true

[[tool.mypy.overrides]]
module = 'aiida_shell.*'
follow_imports = 'skip'
check_untyped_defs = true

[[tool.mypy.overrides]]
module = [
    'dill.*',
    'ruamel.*',
]
ignore_missing_imports = true

[tool.pytest.ini_options]
filterwarnings = [
    'ignore:Creating AiiDA configuration folder.*:UserWarning'
]
